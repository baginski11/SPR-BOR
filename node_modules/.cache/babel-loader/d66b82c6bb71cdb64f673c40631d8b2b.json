{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('./Type');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\n\nvar assertRecord = require('../helpers/assertRecord'); // https://262.ecma-international.org/5.1/#sec-8.10.4\n\n\nmodule.exports = function FromPropertyDescriptor(Desc) {\n  if (typeof Desc === 'undefined') {\n    return Desc;\n  }\n\n  assertRecord(Type, 'Property Descriptor', 'Desc', Desc);\n\n  if (IsDataDescriptor(Desc)) {\n    return {\n      value: Desc['[[Value]]'],\n      writable: !!Desc['[[Writable]]'],\n      enumerable: !!Desc['[[Enumerable]]'],\n      configurable: !!Desc['[[Configurable]]']\n    };\n  } else if (IsAccessorDescriptor(Desc)) {\n    return {\n      get: Desc['[[Get]]'],\n      set: Desc['[[Set]]'],\n      enumerable: !!Desc['[[Enumerable]]'],\n      configurable: !!Desc['[[Configurable]]']\n    };\n  }\n\n  throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n};","map":null,"metadata":{},"sourceType":"script"}