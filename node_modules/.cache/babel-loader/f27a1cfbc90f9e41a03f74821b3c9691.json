{"ast":null,"code":"'use strict';\n\nvar ToNumber = require('./ToNumber');\n\nvar ToPrimitive = require('./ToPrimitive');\n\nvar Type = require('./Type'); // https://262.ecma-international.org/5.1/#sec-11.9.3\n\n\nmodule.exports = function AbstractEqualityComparison(x, y) {\n  var xType = Type(x);\n  var yType = Type(y);\n\n  if (xType === yType) {\n    return x === y; // ES6+ specified this shortcut anyways.\n  }\n\n  if (x == null && y == null) {\n    return true;\n  }\n\n  if (xType === 'Number' && yType === 'String') {\n    return AbstractEqualityComparison(x, ToNumber(y));\n  }\n\n  if (xType === 'String' && yType === 'Number') {\n    return AbstractEqualityComparison(ToNumber(x), y);\n  }\n\n  if (xType === 'Boolean') {\n    return AbstractEqualityComparison(ToNumber(x), y);\n  }\n\n  if (yType === 'Boolean') {\n    return AbstractEqualityComparison(x, ToNumber(y));\n  }\n\n  if ((xType === 'String' || xType === 'Number') && yType === 'Object') {\n    return AbstractEqualityComparison(x, ToPrimitive(y));\n  }\n\n  if (xType === 'Object' && (yType === 'String' || yType === 'Number')) {\n    return AbstractEqualityComparison(ToPrimitive(x), y);\n  }\n\n  return false;\n};","map":null,"metadata":{},"sourceType":"script"}